{-# LANGUAGE DeriveDataTypeable, OverloadedStrings #-}
module Text.InputMethod.SKK.Misc where
import           Data.Data           (Data, Typeable)
import           Data.HashMap.Strict (HashMap)
import qualified Data.HashMap.Strict as HM
import           Data.Maybe          (fromMaybe)
import qualified Data.Text           as T
import           Data.Tuple          (swap)

data ConvMode = Hiragana | Katakana | HankakuKatakana | Ascii
              deriving (Read, Show, Eq, Ord, Data, Typeable)

toggleKana :: ConvMode -> T.Text -> T.Text
toggleKana Hiragana = convKana Hiragana Katakana
toggleKana Katakana = convKana Katakana Hiragana
toggleKana HankakuKatakana = id
toggleKana Ascii = id

toHankaku :: T.Text -> T.Text
toHankaku = convKana Hiragana HankakuKatakana . convKana Katakana HankakuKatakana

convKana :: ConvMode -> ConvMode -> T.Text -> T.Text
convKana Hiragana Hiragana = id
convKana Katakana Katakana = id
convKana HankakuKatakana HankakuKatakana = id
convKana Hiragana Katakana = T.map (\c -> fromMaybe c $ HM.lookup c hiraKataDic)
convKana Katakana Hiragana = T.map (\c -> fromMaybe c $ HM.lookup c kataHiraDic)
convKana Katakana HankakuKatakana = T.concatMap (\c -> fromMaybe (T.singleton c) $ HM.lookup c kataHanDic)
convKana Hiragana HankakuKatakana = T.concatMap (\c -> fromMaybe (T.singleton c) $ HM.lookup c hiraHanDic)
convKana HankakuKatakana Katakana = T.map (\c -> fromMaybe c $ HM.lookup c hanKataDic)
convKana HankakuKatakana Hiragana = T.map (\c -> fromMaybe c $ HM.lookup c hanHiraDic)
convKana _ _ = id

hiraKataDic :: HashMap Char Char
hiraKataDic = HM.fromList hiraKataDic0

hiraKataDic0 :: [(Char, Char)]
hiraKataDic0 = [('\12352','\12448')
               ,('\12353','\12449')
               ,('\12354','\12450')
               ,('\12355','\12451')
               ,('\12356','\12452')
               ,('\12357','\12453')
               ,('\12358','\12454')
               ,('\12359','\12455')
               ,('\12360','\12456')
               ,('\12361','\12457')
               ,('\12362','\12458')
               ,('\12363','\12459')
               ,('\12364','\12460')
               ,('\12365','\12461')
               ,('\12366','\12462')
               ,('\12367','\12463')
               ,('\12368','\12464')
               ,('\12369','\12465')
               ,('\12370','\12466')
               ,('\12371','\12467')
               ,('\12372','\12468')
               ,('\12373','\12469')
               ,('\12374','\12470')
               ,('\12375','\12471')
               ,('\12376','\12472')
               ,('\12377','\12473')
               ,('\12378','\12474')
               ,('\12379','\12475')
               ,('\12380','\12476')
               ,('\12381','\12477')
               ,('\12382','\12478')
               ,('\12383','\12479')
               ,('\12384','\12480')
               ,('\12385','\12481')
               ,('\12386','\12482')
               ,('\12387','\12483')
               ,('\12388','\12484')
               ,('\12389','\12485')
               ,('\12390','\12486')
               ,('\12391','\12487')
               ,('\12392','\12488')
               ,('\12393','\12489')
               ,('\12394','\12490')
               ,('\12395','\12491')
               ,('\12396','\12492')
               ,('\12397','\12493')
               ,('\12398','\12494')
               ,('\12399','\12495')
               ,('\12400','\12496')
               ,('\12401','\12497')
               ,('\12402','\12498')
               ,('\12403','\12499')
               ,('\12404','\12500')
               ,('\12405','\12501')
               ,('\12406','\12502')
               ,('\12407','\12503')
               ,('\12408','\12504')
               ,('\12409','\12505')
               ,('\12410','\12506')
               ,('\12411','\12507')
               ,('\12412','\12508')
               ,('\12413','\12509')
               ,('\12414','\12510')
               ,('\12415','\12511')
               ,('\12416','\12512')
               ,('\12417','\12513')
               ,('\12418','\12514')
               ,('\12419','\12515')
               ,('\12420','\12516')
               ,('\12421','\12517')
               ,('\12422','\12518')
               ,('\12423','\12519')
               ,('\12424','\12520')
               ,('\12425','\12521')
               ,('\12426','\12522')
               ,('\12427','\12523')
               ,('\12428','\12524')
               ,('\12429','\12525')
               ,('\12430','\12526')
               ,('\12431','\12527')
               ,('\12432','\12528')
               ,('\12433','\12529')
               ,('\12434','\12530')
               ,('\12435','\12531')
               ,('\12436','\12532')
               ,('\12437','\12533')
               ,('\12438','\12534')
               ,('\12439','\12535')
               ,('\12440','\12536')
               ,('\12441','\12537')
               ,('\12442','\12538')
               ,('\12443','\12539')
               ,('\12444','\12540')
               ,('\12445','\12541')
               ,('\12446','\12542')
               ,('\12447','\12543')
               ]

kataHiraDic :: HashMap Char Char
kataHiraDic = HM.fromList $ map swap hiraKataDic0

hanHiraDic :: HashMap Char Char
hanHiraDic =
  HM.fromList $ zip
  "\65377\65378\65379\65380\65381\65382\65383\65384\65385\65386\65387\65388\65389\65390\65391\65392\65393\65394\65395\65396\65397\65398\65399\65400\65401\65402\65403\65404\65405\65406\65407\65408\65409\65410\65411\65412\65413\65414\65415\65416\65417\65418\65419\65420\65421\65422\65423\65424\65425\65426\65427\65428\65429\65430\65431\65432\65433\65434\65435\65436\65437\65438\65439"
  "\12290\12300\12301\12289\12539\12434\12353\12355\12357\12359\12361\12419\12421\12423\12387\12540\12354\12356\12358\12360\12362\12363\12365\12367\12369\12371\12373\12375\12377\12379\12381\12383\12385\12388\12390\12392\12394\12395\12396\12397\12398\12399\12402\12405\12408\12411\12414\12415\12416\12417\12418\12420\12422\12424\12425\12426\12427\12428\12429\12431\12435\12443\12444"

hanKataDic :: HashMap Char Char
hanKataDic =
  HM.fromList $ zip
  "\65377\65378\65379\65380\65381\65382\65383\65384\65385\65386\65387\65388\65389\65390\65391\65392\65393\65394\65395\65396\65397\65398\65399\65400\65401\65402\65403\65404\65405\65406\65407\65408\65409\65410\65411\65412\65413\65414\65415\65416\65417\65418\65419\65420\65421\65422\65423\65424\65425\65426\65427\65428\65429\65430\65431\65432\65433\65434\65435\65436\65437\65438\65439"
  "\12290\12300\12301\12289\12539\12530\12449\12451\12453\12455\12457\12515\12517\12519\12483\12540\12450\12452\12454\12456\12458\12459\12461\12463\12465\12467\12469\12471\12473\12475\12477\12479\12481\12484\12486\12488\12490\12491\12492\12493\12494\12495\12498\12501\12504\12507\12510\12511\12512\12513\12514\12516\12518\12520\12521\12522\12523\12524\12525\12527\12531\12443\12444"

hiraHanDic :: HashMap Char T.Text
hiraHanDic = HM.fromList [('\12353',"\65383"),('\12354',"\65393"),('\12355',"\65384"),('\12356',"\65394"),('\12357',"\65385")
             ,('\12358',"\65395"),('\12359',"\65386"),('\12360',"\65396"),('\12361',"\65387"),('\12362',"\65397"),('\12363',"\65398"),('\12364',"\65398\65438"),('\12365',"\65399"),('\12366',"\65399\65438"),('\12367',"\65400"),('\12368',"\65400\65438"),('\12369',"\65401"),('\12370',"\65401\65438"),('\12371',"\65402"),('\12372',"\65402\65438"),('\12373',"\65403"),('\12374',"\65403\65438"),('\12375',"\65404"),('\12376',"\65404\65438"),('\12377',"\65405"),('\12378',"\65405\65438"),('\12379',"\65406"),('\12380',"\65406\65438"),('\12381',"\65407"),('\12382',"\65407\65438"),('\12383',"\65408"),('\12384',"\65408\65438"),('\12385',"\65409"),('\12386',"\65409\65438"),('\12387',"\65391"),('\12388',"\65410"),('\12389',"\65410\65438"),('\12390',"\65411"),('\12391',"\65411\65438"),('\12392',"\65412"),('\12393',"\65412\65438"),('\12394',"\65413"),('\12395',"\65414"),('\12396',"\65415"),('\12397',"\65416"),('\12398',"\65417"),('\12399',"\65418"),('\12400',"\65418\65438"),('\12401',"\65418\65439"),('\12402',"\65419"),('\12403',"\65419\65438"),('\12404',"\65419\65439"),('\12405',"\65420"),('\12406',"\65420\65438"),('\12407',"\65420\65439"),('\12408',"\65421"),('\12409',"\65421\65438"),('\12410',"\65421\65439"),('\12411',"\65422"),('\12412',"\65422\65438"),('\12413',"\65422\65439"),('\12414',"\65423"),('\12415',"\65424"),('\12416',"\65425"),('\12417',"\65426"),('\12418',"\65427"),('\12419',"\65388"),('\12420',"\65428"),('\12421',"\65389"),('\12422',"\65429"),('\12423',"\65390"),('\12424',"\65430"),('\12425',"\65431"),('\12426',"\65432"),('\12427',"\65433"),('\12428',"\65434"),('\12429',"\65435"),('\12430',"\65436"),('\12431',"\65436"),('\12432',"\65394"),('\12433',"\65395"),('\12434',"\65382"),('\12435',"\65437"),('\12436',"\65395\65438"),('\12437',"\65398"),('\12438',"\65401"),('\12441',"\65438"),('\12442',"\65439"),('\12443',"\65438"),('\12444',"\65439"),('\12540',"-")]

kataHanDic :: HashMap Char T.Text
kataHanDic = HM.fromList [('\12449',"\65383"),('\12450',"\65393"),('\12451',"\65384"),('\12452',"\65394"),('\12453',"\65385"),('\12454',"\65395"),('\12455',"\65386"),('\12456',"\65396"),('\12457',"\65387"),('\12458',"\65397"),('\12459',"\65398"),('\12460',"\65398\65438"),('\12461',"\65399"),('\12462',"\65399\65438"),('\12463',"\65400"),('\12464',"\65400\65438"),('\12465',"\65401"),('\12466',"\65401\65438"),('\12467',"\65402"),('\12468',"\65402\65438"),('\12469',"\65403"),('\12470',"\65403\65438"),('\12471',"\65404"),('\12472',"\65404\65438"),('\12473',"\65405"),('\12474',"\65405\65438"),('\12475',"\65406"),('\12476',"\65406\65438"),('\12477',"\65407"),('\12478',"\65407\65438"),('\12479',"\65408"),('\12480',"\65408\65438"),('\12481',"\65409"),('\12482',"\65409\65438"),('\12483',"\65391"),('\12484',"\65410"),('\12485',"\65410\65438"),('\12486',"\65411"),('\12487',"\65411\65438"),('\12488',"\65412"),('\12489',"\65412\65438"),('\12490',"\65413"),('\12491',"\65414"),('\12492',"\65415"),('\12493',"\65416"),('\12494',"\65417"),('\12495',"\65418"),('\12496',"\65418\65438"),('\12497',"\65418\65439"),('\12498',"\65419"),('\12499',"\65419\65438"),('\12500',"\65419\65439"),('\12501',"\65420"),('\12502',"\65420\65438"),('\12503',"\65420\65439"),('\12504',"\65421"),('\12505',"\65421\65438"),('\12506',"\65421\65439"),('\12507',"\65422"),('\12508',"\65422\65438"),('\12509',"\65422\65439"),('\12510',"\65423"),('\12511',"\65424"),('\12512',"\65425"),('\12513',"\65426"),('\12514',"\65427"),('\12515',"\65388"),('\12516',"\65428"),('\12517',"\65389"),('\12518',"\65429"),('\12519',"\65390"),('\12520',"\65430"),('\12521',"\65431"),('\12522',"\65432"),('\12523',"\65433"),('\12524',"\65434"),('\12525',"\65435"),('\12526',"\65436"),('\12527',"\65436"),('\12528',"\65394"),('\12529',"\65395"),('\12530',"\65382"),('\12531',"\65437"),('\12532',"\65395\65438"),('\12533',"\65398"),('\12534',"\65401"),('\12537',"\65438"),('\12538',"\65439"),('\12539',"\65438"),('\12540',"-")]
